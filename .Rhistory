library(xlsx)
library(xlsx)
library("swirl")
install.packages(swirl)
install.packages("swirl")
packageVersion("swirl")
Sys.getenv('MYSQL_HOME')
dim(tidydata)
getwd()
ls
library(datasets)
with(faithful, plot(eruptions, waiting))
dev.copy(png, file = "geyseyplot.png")
dev.off()
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages(“ggplot2”)
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
sum(pollution$pm25)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col = "ble")
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", break = 100)
hist(ppm, col = "green", break = "100")
hist(ppm, col = "green", break = "100")
?hist
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 12)
abline(v = 12, lwd = 2)
abline(v = median(ppm),col = "magenta" lwd = 4)
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
pollution
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat")
barplot(reg, col = "wheat", mamain = "Number of countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(y ~ x)
boxplot(x, y, )
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(v = 12, lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "east")
plot(east$latitude, east$pm25, main = "East")
?Devices
plot(faithful, eruptions)
plot(faithful, eruptions)
plot(faithful, eruptions)
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,  file = "geyserplot.png")
dev.off()
head(car)
head(cars)
plot(cars, speed, dist)
plot(speed, dist())
plot(speed, dist)
with(cars, plot(speed, dist))
mean(cars$speed)
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab= "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab= "red", main = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
with(airquality$Wind, airquality$Ozone, set = "n")
?with
with(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, type="n",airquality$Ozone)
title(mamain =  "Wind and Ozone in NYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality$5)
may <- subset(airquality, Month==5)
points(may$Wind,may$Ozone,col="blue",pch=17)
may <- subset(airquality, Month !=5)
notmay <- subset(airquality, Month !=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
exit
close
quit
bye
dataFile <- "./data/household_power_consumption.txt"
data <- read.table(dataFile, header=TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=4, col="red")
abline(h=.4, col="red")
3
5
abline(h=0.5, col="red")
5
3
8
1
2
3
4
6
5
7
8
0.8
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
sdv1$v[,1]
svd1$v[,1]
svd$d
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage
myImage(al)
myImage(a1)
a2 <- svd1$u[,1:2] %*%  diag(svd1$d[1:2])  %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*%  diag(svd1$d[1:10])  %*% t(svd1$v[,1:10]))
dim(ssd)
names(562, 563)
names(562)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
steps.date <- aggregate(steps~date,activity,sum)
hist(steps.date$steps, xlab="Total steps by day", ylab="Frequency [Days]",main="Histogram : Number of daily steps")
setwd("C:/Users/BEN/ProgrammingAssignment2/RepData_PeerAssessment1")
data <- read.table(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
str(data)
steps.date <- aggregate(steps~date,activity,sum)
hist(steps.date$steps, xlab="Total steps by day", ylab="Frequency [Days]",main="Histogram : Number of daily steps")
activity <- read.table(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
str(data)
steps.date <- aggregate(steps~date,activity,sum)
hist(steps.date$steps, xlab="Total steps by day", ylab="Frequency [Days]",main="Histogram : Number of daily steps")
mean1 <- mean(steps.date$steps, na.rm=TRUE)
median1 <- median(steps.date$steps, na.rm=TRUE)
steps.interval <- aggregate(steps ~ interval, data=activity, FUN=mean)
plot(steps.interval, type="l",xlab="interval [in 5min]", ylab="Average daily activity pattern of steps",  main="average number of steps")
steps.interval$interval[which.max(steps.interval$steps)]
activity.merged = merge(activity, steps.interval, by="interval")
activity.merged$steps.x[is.na(activity.merged$steps.x)] = activity.merged$steps.y[is.na(activity.merged$steps.x)]
activity.merged <- aggregate(steps.x~interval,activity.merged,sum)
hist(activity.merged$steps.x, xlab="Total steps by day", ylab="Frequency [Days]",main="Histogram : Number of daily steps")
mean2 <- mean(activity.merged$steps, na.rm=TRUE)
median2 <- median(activity.merged$steps, na.rm=TRUE)
daytype <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
activity$daytype <- as.factor(sapply(activity$date, daytype))
str(activity)
par(mfrow=c(2,1))
for (type in c("weekend", "weekday")) {
steps.type <- aggregate(steps ~ interval,
data=activity,
subset=activity$daytype==type,
FUN=mean)
plot(steps.type, type="l", main=type)
}
